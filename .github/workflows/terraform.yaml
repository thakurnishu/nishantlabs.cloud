name: "Terraform Infra"

env:
  KEY: 'portfolio'
  TERRAFORM_VERSION: '1.9.6'
  AWS_REGION: us-east-1
  WORKING_DIRECTORY: 'infra'

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Action to perform'
        required: true
        type: choice
        options:
          - 'destroy'
          - 'create'
          - 'plan'
        default: 'plan' 
jobs:
  Terraform-Infra:
    permissions:
      contents: 'write'
      id-token: 'write'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v5.0.0
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - id: fmt
        shell: bash
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: terraform fmt -check

      - id: init
        shell: bash
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: |
          terraform init \
                -reconfigure \
                -backend-config="bucket=${{ secrets.BACKEND_BUCKET }}" \
                -backend-config="key=${{ env.KEY }}" 

      - id: validate
        shell: bash
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: terraform validate -no-color

      - id: plan
        name: Terraform Plan
        if: github.event.inputs.action == 'plan'
        shell: bash
        working-directory: ${{ env.WORKING_DIRECTORY }}
        env: 
          TF_VAR_bucket_name: ${{ secrets.PORTFOLIO_BUCKET_NAME }}
        run: |
          terraform plan -input=false -no-color 

      - id: apply
        name: Terraform Apply
        if: github.event.inputs.action == 'create' || github.ref == 'refs/heads/main'
        shell: bash
        working-directory: ${{ env.WORKING_DIRECTORY }}
        env: 
          TF_VAR_bucket_name: ${{ secrets.PORTFOLIO_BUCKET_NAME }}
        run: |
          terraform apply -input=false -auto-approve -no-color

      - id: destroy
        name: Terraform Destroy
        if: github.event.inputs.action == 'destroy'
        shell: bash
        working-directory: ${{ env.WORKING_DIRECTORY }}
        env: 
          TF_VAR_bucket_name: ${{ secrets.PORTFOLIO_BUCKET_NAME }}
        run: |
          terraform destroy -input=false -auto-approve -no-color
